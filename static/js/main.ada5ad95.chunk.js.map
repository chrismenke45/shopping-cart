{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Shop.js","functions/getProductData.js","functions/apiDataToArray.js","components/CartView.js","components/ItemPage.js","App.js","index.js"],"names":["Navbar","props","displayCartToggle","cartQuantity","id","to","style","textDecoration","className","onClick","icon","faShoppingCart","Home","Shop","list","loaded","addToCart","map","item","itemId","src","url","alt","itemName","toUpperCase","cost","a","fetch","response","json","data","getProductData","apiDataToArray","dataStartLocation","itemCount","length","itemArray","i","store","name","type","images","description","quantity","toLowerCase","includes","CartView","displayCart","removeFromCart","sumTotal","arr","reduce","sum","obj","ItemPage","pageId","filter","listItem","console","log","App","useState","setList","cart","setCart","setLoaded","setDisplayCart","useEffect","then","items","catch","error","message","alert","prevState","e","newList","target","getAttribute","exact","path","render","match","params","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ada5ad95.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\n\nfunction Navbar(props) {\n    const { displayCartToggle, cartQuantity } = props\n    return (\n        <div id=\"navBar\">\n            {/*these are the links that lead to other oages */}\n            <h1 id=\"pageTitle\">FORTNITE - Upcoming Items</h1>\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\n                <h3 className=\"navItem\">Home</h3>\n            </Link>\n            <Link to=\"/shop\" style={{ textDecoration: 'none' }}>\n                <h3 className=\"navItem\">Shop</h3>\n            </Link>\n            <button onClick={displayCartToggle}>\n                <FontAwesomeIcon icon={faShoppingCart} />\n                {cartQuantity ? //if cart is empty dont display number, otherwise display number of items\n                    <sup> {cartQuantity}</sup>\n                    :\n                    null}\n            </button>\n        </div>\n    );\n}\n\nexport default Navbar;","import React from \"react\";\n\nfunction Home() {\n  return (\n    <div className=\"homePageContent\">\n      <div className=\"homePageNews\">\n        <h2>News</h2>\n        <p>New items are coming Winter 2021! Make sure to check them out in our shop!</p>\n      </div>\n    </div >\n  );\n}\n\nexport default Home;","import React from \"react\";\nimport { Link } from \"react-router-dom\"\n\nfunction Shop(props) {\n    const { list, loaded, addToCart } = props\n    return (\n        <div className=\"itemDisplay\">\n            {\n                loaded ?//if API hasnt loaded dont diplay any items\n                    <div className=\"itemDisplayGrid\">\n                        {list.map((item) => {{/*map trhough items and add them toa grid*/}\n                            return <div key={item.itemId} className=\"itemCard\">\n                                {/*link below makes it so each item will take you to its page if clicked on */}\n                                <Link data-id={item.itemId} to={`/shop/${item.itemId}`} style={{ textDecoration: 'none' }}>\n                                    <figure>\n                                        <img className=\"itemImg\" src={item.url} alt=\"not available\" />\n                                        <figcaption>\n                                            {item.itemName.toUpperCase()}\n                                            <br></br>\n                                            {`$ ${item.cost}`}\n\n                                        </figcaption>\n                                    </figure>\n                                </Link>\n\n                                <button data-id={item.itemId} onClick={addToCart} className=\"addBtn\">Add to Cart</button>\n                            </div>\n                        })\n                        }\n                    </div>\n                    :\n                    <div>Loading...</div>\n            }\n\n        </div>\n    );\n}\n\nexport default Shop;\n\n","async function getProductData() {//async function to get item data from api\n    const response = await fetch('https://fortnite-api.theapinetwork.com/store/get');\n    const data = await response.json();\n    return data.data\n  }\n  export default getProductData;","function apiDataToArray(data, dataStartLocation, itemCount) {//takes data from api fetch and takes in argument on how many items to return in array\n    if (itemCount + dataStartLocation > data.length) {\n        // eslint-disable-next-line\n        throw ('item count too high, not enough items from api') //have error if inputs dont make sense\n    } else {\n        let itemArray = []\n        for (let i = dataStartLocation; i < itemCount + dataStartLocation; i++) {//add objects to aray with important info from APi\n                itemArray[i - dataStartLocation] = {\n                    cost: data[i].store.cost,\n                    itemName: `${data[i].item.name} ${data[i].item.type}`,\n                    url: data[i].item.images.icon,\n                    description: data[i].item.description,\n                    itemId: data[i].itemId,\n                    quantity: 0\n                }\n                if (data[i].item.name.toLowerCase().includes(data[i].item.type.toLowerCase())) {//if theitem name already include the type, change it so the type isnt repeated\n                    itemArray[i - dataStartLocation].itemName = data[i].item.name\n            }\n        }\n        return itemArray\n    }\n}\nexport default apiDataToArray;","import React from \"react\";\n\nfunction CartView(props) {\n    const { list, displayCart, addToCart, removeFromCart, displayCartToggle } = props\n\n    const sumTotal = (arr) => {\n        return arr.reduce((sum, obj) => sum + obj.cost * obj.quantity, 0)\n    }\n\n    return (\n        <div className=\"cartDisplay\">\n\n            {\n                displayCart ?//only display if user has clicked to make it visible\n                    <div className=\"cartDisplayGrid\">\n                        <button className=\"closeBtn\" onClick={displayCartToggle}>X</button>\n                        <h2>Your Shopping Cart</h2>\n                        {list.map((item) => {\n                            if (item.quantity === 0) {\n                                return null\n                            } else {\n                                return <div key={item.itemId} className=\"cartItemDisplay\">\n                                    <img className=\"cartPicture\" src={item.url} alt=\"Not available at this time\" />\n                                    <h4 className=\"cartItemTitle\">\n                                        {item.itemName.toUpperCase()}\n                                    </h4>\n                                    <div className=\"cartItemQuantity\">\n                                        <button data-id={item.itemId} onClick={addToCart}>+</button>\n                                        <p> {item.quantity} </p>\n                                        <button data-id={item.itemId} onClick={removeFromCart}>-</button>\n                                    </div>\n                                </div>\n                            }\n                        })\n\n                        }\n                        {sumTotal(list) !== 0 ? //if cart is empty then say that, otherwise show total\n                            <p>Total: ${sumTotal(list)}</p>\n                            :\n                            <p>Your cart is empty</p>\n                        }\n\n                    </div>\n                    :\n                    null\n            }\n        </div>\n    );\n}\n\nexport default CartView;","import React from \"react\";\n\nfunction ItemPage(props) {\n    const { list, pageId, loaded, addToCart } = props\n    const [item] = list.filter(listItem => listItem.itemId === pageId)\n    console.log(item)\n    console.log(loaded)\n    return (\n        <div className=\"itemPage\">\n            {loaded ?//only display if api has been succesfully called\n                <div className=\"individualPage\">\n                    <h2>{item.itemName}</h2>\n                    <img src={item.url} alt=\"Not available at this time\" />\n                    <p>{item.description}</p>\n                    <p>${item.cost}</p>\n                    <button data-id={item.itemId} onClick={addToCart} className=\"addBtn\">Add to Cart</button>\n                </div>\n                :\n                <h3>Loading...</h3>\n            }\n        </div>\n    );\n}\n\nexport default ItemPage;","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\"\nimport Home from \"./components/Home\";\nimport Shop from \"./components/Shop\";\nimport getProductData from \"./functions/getProductData\";\nimport apiDataToArray from \"./functions/apiDataToArray\";\nimport CartView from \"./components/CartView\";\nimport ItemPage from \"./components/ItemPage\";\n\nfunction App() {\n  const [list, setList] = useState([]); //list of items gotten from API\n  const [cart, setCart] = useState(0) //quantity of items in cart\n  const [loaded, setLoaded] = useState(false) //set to true once api has been loaded\n  const [displayCart, setDisplayCart] = useState(false) //displays shopping cart if true\n\n\n  useEffect(() => {//once page mounts then api is called\n    getProductData().then(data => {//call api\n      let items = apiDataToArray(data, 0, 32)//put data in useful array, only use some of the data\n      setList(items)//set list to the api data array\n      setLoaded(true)//set it to loaded\n    })\n    .catch(error => {\n      console.log(error.message)//show error in consile\n      alert(\"Item data not loading, please try again later\") //alert user that somehting is wrong\n    })\n  }, []);\n\n  const displayCartToggle = () => {\n    setDisplayCart(prevState => !prevState)//this toggles the visibility of the shopping cart\n  }\n\n  const addToCart = (e) => {//this adds item to cart\n    let newList = list.map(item => {//map through items\n      if (e.target.getAttribute('data-id') === item.itemId) {//if item is the one that got clicked on\n        item.quantity = item.quantity + 1//add to quantity\n      }\n      return item;//otheriwse leave as is\n    })\n    setList(newList);//reset list\n    setCart(prevState => prevState + 1)//show 1 more cart item has been added\n  }\n\n  const removeFromCart = (e) => {//this removes items from cart\n    let newList = list.map(item => {\n      if (e.target.getAttribute('data-id') === item.itemId) {//if item is the one that was clicked on\n        if (item.quantity <= 0) {//if item already has no quantity dont make it negative, leave as is\n          return item;\n        } else {\n          item.quantity = item.quantity - 1//lower item quantity\n          setCart(prevState => prevState - 1);//lower total cart quantity\n        }\n      }\n      return item;\n    })\n    setList(newList);//reset list\n  }\n\n  return (\n    <BrowserRouter>\n      <Navbar displayCartToggle={displayCartToggle} cartQuantity={cart} />\n\n      <CartView list={list} displayCart={displayCart} addToCart={addToCart} removeFromCart={removeFromCart} displayCartToggle={displayCartToggle}/>\n      {/*bellow is tall the different pages that can be switched to*/}\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/shop\">\n          <Shop list={list} loaded={loaded} addToCart={addToCart} />\n        </Route>\n        <Route path=\"/shop/:id\" render={({ match }) => (\n          <ItemPage\n            list={list}\n            pageId={match.params.id}\n            loaded={loaded}\n            addToCart={addToCart}\n          />\n        )}\n        />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}